{"ast":null,"code":"var _jsxFileName = \"/home/thiagoriva/Documents/Projects/daily-report/src/context/DataContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { loadData, saveData } from '../data/seedData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext();\n\n// Tipos de ações\nconst ACTIONS = {\n  LOAD_DATA: 'LOAD_DATA',\n  ADD_ATIVIDADE: 'ADD_ATIVIDADE',\n  UPDATE_ATIVIDADE: 'UPDATE_ATIVIDADE',\n  DELETE_ATIVIDADE: 'DELETE_ATIVIDADE',\n  ADD_STATUS_TECNICO: 'ADD_STATUS_TECNICO',\n  UPDATE_STATUS_TECNICO: 'UPDATE_STATUS_TECNICO',\n  UPDATE_CLUSTER: 'UPDATE_CLUSTER',\n  ADD_CLUSTER: 'ADD_CLUSTER',\n  UPDATE_USINA: 'UPDATE_USINA',\n  ADD_USINA: 'ADD_USINA',\n  UPDATE_TECNICO: 'UPDATE_TECNICO',\n  ADD_TECNICO: 'ADD_TECNICO'\n};\n\n// Reducer para gerenciar o estado\nconst dataReducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_DATA:\n      return action.payload;\n    case ACTIONS.ADD_ATIVIDADE:\n      const newAtividade = {\n        id: Date.now().toString(),\n        ...action.payload\n      };\n      return {\n        ...state,\n        atividades: [...state.atividades, newAtividade]\n      };\n    case ACTIONS.UPDATE_ATIVIDADE:\n      return {\n        ...state,\n        atividades: state.atividades.map(ativ => ativ.id === action.payload.id ? {\n          ...ativ,\n          ...action.payload\n        } : ativ)\n      };\n    case ACTIONS.DELETE_ATIVIDADE:\n      return {\n        ...state,\n        atividades: state.atividades.filter(ativ => ativ.id !== action.payload)\n      };\n    case ACTIONS.ADD_STATUS_TECNICO:\n      const newStatus = {\n        id: Date.now().toString(),\n        ...action.payload\n      };\n      return {\n        ...state,\n        statusTecnico: [...state.statusTecnico, newStatus]\n      };\n    case ACTIONS.UPDATE_STATUS_TECNICO:\n      return {\n        ...state,\n        statusTecnico: state.statusTecnico.map(status => status.id === action.payload.id ? {\n          ...status,\n          ...action.payload\n        } : status)\n      };\n    case ACTIONS.ADD_CLUSTER:\n      const newCluster = {\n        id: Date.now().toString(),\n        ...action.payload\n      };\n      return {\n        ...state,\n        clusters: [...state.clusters, newCluster]\n      };\n    case ACTIONS.UPDATE_CLUSTER:\n      return {\n        ...state,\n        clusters: state.clusters.map(cluster => cluster.id === action.payload.id ? {\n          ...cluster,\n          ...action.payload\n        } : cluster)\n      };\n    case ACTIONS.ADD_USINA:\n      const newUsina = {\n        id: Date.now().toString(),\n        ...action.payload\n      };\n      return {\n        ...state,\n        usinas: [...state.usinas, newUsina]\n      };\n    case ACTIONS.UPDATE_USINA:\n      return {\n        ...state,\n        usinas: state.usinas.map(usina => usina.id === action.payload.id ? {\n          ...usina,\n          ...action.payload\n        } : usina)\n      };\n    case ACTIONS.ADD_TECNICO:\n      const newTecnico = {\n        id: Date.now().toString(),\n        ...action.payload\n      };\n      return {\n        ...state,\n        tecnicos: [...state.tecnicos, newTecnico]\n      };\n    case ACTIONS.UPDATE_TECNICO:\n      return {\n        ...state,\n        tecnicos: state.tecnicos.map(tecnico => tecnico.id === action.payload.id ? {\n          ...tecnico,\n          ...action.payload\n        } : tecnico)\n      };\n    default:\n      return state;\n  }\n};\n\n// Provider do contexto\nexport const DataProvider = ({\n  children\n}) => {\n  _s();\n  const [data, dispatch] = useReducer(dataReducer, {\n    clusters: [],\n    usinas: [],\n    tecnicos: [],\n    funcoes: [],\n    atividades: [],\n    statusTecnico: []\n  });\n\n  // Carregar dados na inicialização\n  useEffect(() => {\n    const loadedData = loadData();\n    dispatch({\n      type: ACTIONS.LOAD_DATA,\n      payload: loadedData\n    });\n  }, []);\n\n  // Salvar dados sempre que o estado mudar\n  useEffect(() => {\n    if (data.clusters.length > 0) {\n      // Só salva se já carregou os dados iniciais\n      saveData(data);\n    }\n  }, [data]);\n\n  // Funções de ação\n  const addAtividade = atividade => {\n    dispatch({\n      type: ACTIONS.ADD_ATIVIDADE,\n      payload: atividade\n    });\n  };\n  const updateAtividade = atividade => {\n    dispatch({\n      type: ACTIONS.UPDATE_ATIVIDADE,\n      payload: atividade\n    });\n  };\n  const deleteAtividade = id => {\n    dispatch({\n      type: ACTIONS.DELETE_ATIVIDADE,\n      payload: id\n    });\n  };\n  const addStatusTecnico = status => {\n    dispatch({\n      type: ACTIONS.ADD_STATUS_TECNICO,\n      payload: status\n    });\n  };\n  const updateStatusTecnico = status => {\n    dispatch({\n      type: ACTIONS.UPDATE_STATUS_TECNICO,\n      payload: status\n    });\n  };\n  const addCluster = cluster => {\n    dispatch({\n      type: ACTIONS.ADD_CLUSTER,\n      payload: cluster\n    });\n  };\n  const updateCluster = cluster => {\n    dispatch({\n      type: ACTIONS.UPDATE_CLUSTER,\n      payload: cluster\n    });\n  };\n  const addUsina = usina => {\n    dispatch({\n      type: ACTIONS.ADD_USINA,\n      payload: usina\n    });\n  };\n  const updateUsina = usina => {\n    dispatch({\n      type: ACTIONS.UPDATE_USINA,\n      payload: usina\n    });\n  };\n  const addTecnico = tecnico => {\n    dispatch({\n      type: ACTIONS.ADD_TECNICO,\n      payload: tecnico\n    });\n  };\n  const updateTecnico = tecnico => {\n    dispatch({\n      type: ACTIONS.UPDATE_TECNICO,\n      payload: tecnico\n    });\n  };\n  const value = {\n    data,\n    addAtividade,\n    updateAtividade,\n    deleteAtividade,\n    addStatusTecnico,\n    updateStatusTecnico,\n    addCluster,\n    updateCluster,\n    addUsina,\n    updateUsina,\n    addTecnico,\n    updateTecnico\n  };\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook para usar o contexto\n_s(DataProvider, \"fTy7jY8ss+jfXKRMG9W+3/5hDqI=\");\n_c = DataProvider;\nexport const useData = () => {\n  _s2();\n  const context = useContext(DataContext);\n  if (!context) {\n    throw new Error('useData deve ser usado dentro de um DataProvider');\n  }\n  return context;\n};\n_s2(useData, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","loadData","saveData","jsxDEV","_jsxDEV","DataContext","ACTIONS","LOAD_DATA","ADD_ATIVIDADE","UPDATE_ATIVIDADE","DELETE_ATIVIDADE","ADD_STATUS_TECNICO","UPDATE_STATUS_TECNICO","UPDATE_CLUSTER","ADD_CLUSTER","UPDATE_USINA","ADD_USINA","UPDATE_TECNICO","ADD_TECNICO","dataReducer","state","action","type","payload","newAtividade","id","Date","now","toString","atividades","map","ativ","filter","newStatus","statusTecnico","status","newCluster","clusters","cluster","newUsina","usinas","usina","newTecnico","tecnicos","tecnico","DataProvider","children","_s","data","dispatch","funcoes","loadedData","length","addAtividade","atividade","updateAtividade","deleteAtividade","addStatusTecnico","updateStatusTecnico","addCluster","updateCluster","addUsina","updateUsina","addTecnico","updateTecnico","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useData","_s2","context","Error","$RefreshReg$"],"sources":["/home/thiagoriva/Documents/Projects/daily-report/src/context/DataContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { loadData, saveData } from '../data/seedData';\n\nconst DataContext = createContext();\n\n// Tipos de ações\nconst ACTIONS = {\n  LOAD_DATA: 'LOAD_DATA',\n  ADD_ATIVIDADE: 'ADD_ATIVIDADE',\n  UPDATE_ATIVIDADE: 'UPDATE_ATIVIDADE',\n  DELETE_ATIVIDADE: 'DELETE_ATIVIDADE',\n  ADD_STATUS_TECNICO: 'ADD_STATUS_TECNICO',\n  UPDATE_STATUS_TECNICO: 'UPDATE_STATUS_TECNICO',\n  UPDATE_CLUSTER: 'UPDATE_CLUSTER',\n  ADD_CLUSTER: 'ADD_CLUSTER',\n  UPDATE_USINA: 'UPDATE_USINA',\n  ADD_USINA: 'ADD_USINA',\n  UPDATE_TECNICO: 'UPDATE_TECNICO',\n  ADD_TECNICO: 'ADD_TECNICO'\n};\n\n// Reducer para gerenciar o estado\nconst dataReducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.LOAD_DATA:\n      return action.payload;\n    \n    case ACTIONS.ADD_ATIVIDADE:\n      const newAtividade = {\n        id: Date.now().toString(),\n        ...action.payload\n      };\n      return {\n        ...state,\n        atividades: [...state.atividades, newAtividade]\n      };\n    \n    case ACTIONS.UPDATE_ATIVIDADE:\n      return {\n        ...state,\n        atividades: state.atividades.map(ativ => \n          ativ.id === action.payload.id ? { ...ativ, ...action.payload } : ativ\n        )\n      };\n    \n    case ACTIONS.DELETE_ATIVIDADE:\n      return {\n        ...state,\n        atividades: state.atividades.filter(ativ => ativ.id !== action.payload)\n      };\n    \n    case ACTIONS.ADD_STATUS_TECNICO:\n      const newStatus = {\n        id: Date.now().toString(),\n        ...action.payload\n      };\n      return {\n        ...state,\n        statusTecnico: [...state.statusTecnico, newStatus]\n      };\n    \n    case ACTIONS.UPDATE_STATUS_TECNICO:\n      return {\n        ...state,\n        statusTecnico: state.statusTecnico.map(status => \n          status.id === action.payload.id ? { ...status, ...action.payload } : status\n        )\n      };\n    \n    case ACTIONS.ADD_CLUSTER:\n      const newCluster = {\n        id: Date.now().toString(),\n        ...action.payload\n      };\n      return {\n        ...state,\n        clusters: [...state.clusters, newCluster]\n      };\n    \n    case ACTIONS.UPDATE_CLUSTER:\n      return {\n        ...state,\n        clusters: state.clusters.map(cluster => \n          cluster.id === action.payload.id ? { ...cluster, ...action.payload } : cluster\n        )\n      };\n    \n    case ACTIONS.ADD_USINA:\n      const newUsina = {\n        id: Date.now().toString(),\n        ...action.payload\n      };\n      return {\n        ...state,\n        usinas: [...state.usinas, newUsina]\n      };\n    \n    case ACTIONS.UPDATE_USINA:\n      return {\n        ...state,\n        usinas: state.usinas.map(usina => \n          usina.id === action.payload.id ? { ...usina, ...action.payload } : usina\n        )\n      };\n    \n    case ACTIONS.ADD_TECNICO:\n      const newTecnico = {\n        id: Date.now().toString(),\n        ...action.payload\n      };\n      return {\n        ...state,\n        tecnicos: [...state.tecnicos, newTecnico]\n      };\n    \n    case ACTIONS.UPDATE_TECNICO:\n      return {\n        ...state,\n        tecnicos: state.tecnicos.map(tecnico => \n          tecnico.id === action.payload.id ? { ...tecnico, ...action.payload } : tecnico\n        )\n      };\n    \n    default:\n      return state;\n  }\n};\n\n// Provider do contexto\nexport const DataProvider = ({ children }) => {\n  const [data, dispatch] = useReducer(dataReducer, {\n    clusters: [],\n    usinas: [],\n    tecnicos: [],\n    funcoes: [],\n    atividades: [],\n    statusTecnico: []\n  });\n\n  // Carregar dados na inicialização\n  useEffect(() => {\n    const loadedData = loadData();\n    dispatch({ type: ACTIONS.LOAD_DATA, payload: loadedData });\n  }, []);\n\n  // Salvar dados sempre que o estado mudar\n  useEffect(() => {\n    if (data.clusters.length > 0) { // Só salva se já carregou os dados iniciais\n      saveData(data);\n    }\n  }, [data]);\n\n  // Funções de ação\n  const addAtividade = (atividade) => {\n    dispatch({ type: ACTIONS.ADD_ATIVIDADE, payload: atividade });\n  };\n\n  const updateAtividade = (atividade) => {\n    dispatch({ type: ACTIONS.UPDATE_ATIVIDADE, payload: atividade });\n  };\n\n  const deleteAtividade = (id) => {\n    dispatch({ type: ACTIONS.DELETE_ATIVIDADE, payload: id });\n  };\n\n  const addStatusTecnico = (status) => {\n    dispatch({ type: ACTIONS.ADD_STATUS_TECNICO, payload: status });\n  };\n\n  const updateStatusTecnico = (status) => {\n    dispatch({ type: ACTIONS.UPDATE_STATUS_TECNICO, payload: status });\n  };\n\n  const addCluster = (cluster) => {\n    dispatch({ type: ACTIONS.ADD_CLUSTER, payload: cluster });\n  };\n\n  const updateCluster = (cluster) => {\n    dispatch({ type: ACTIONS.UPDATE_CLUSTER, payload: cluster });\n  };\n\n  const addUsina = (usina) => {\n    dispatch({ type: ACTIONS.ADD_USINA, payload: usina });\n  };\n\n  const updateUsina = (usina) => {\n    dispatch({ type: ACTIONS.UPDATE_USINA, payload: usina });\n  };\n\n  const addTecnico = (tecnico) => {\n    dispatch({ type: ACTIONS.ADD_TECNICO, payload: tecnico });\n  };\n\n  const updateTecnico = (tecnico) => {\n    dispatch({ type: ACTIONS.UPDATE_TECNICO, payload: tecnico });\n  };\n\n  const value = {\n    data,\n    addAtividade,\n    updateAtividade,\n    deleteAtividade,\n    addStatusTecnico,\n    updateStatusTecnico,\n    addCluster,\n    updateCluster,\n    addUsina,\n    updateUsina,\n    addTecnico,\n    updateTecnico\n  };\n\n  return (\n    <DataContext.Provider value={value}>\n      {children}\n    </DataContext.Provider>\n  );\n};\n\n// Hook para usar o contexto\nexport const useData = () => {\n  const context = useContext(DataContext);\n  if (!context) {\n    throw new Error('useData deve ser usado dentro de um DataProvider');\n  }\n  return context;\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC/E,SAASC,QAAQ,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;;AAEnC;AACA,MAAMS,OAAO,GAAG;EACdC,SAAS,EAAE,WAAW;EACtBC,aAAa,EAAE,eAAe;EAC9BC,gBAAgB,EAAE,kBAAkB;EACpCC,gBAAgB,EAAE,kBAAkB;EACpCC,kBAAkB,EAAE,oBAAoB;EACxCC,qBAAqB,EAAE,uBAAuB;EAC9CC,cAAc,EAAE,gBAAgB;EAChCC,WAAW,EAAE,aAAa;EAC1BC,YAAY,EAAE,cAAc;EAC5BC,SAAS,EAAE,WAAW;EACtBC,cAAc,EAAE,gBAAgB;EAChCC,WAAW,EAAE;AACf,CAAC;;AAED;AACA,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKhB,OAAO,CAACC,SAAS;MACpB,OAAOc,MAAM,CAACE,OAAO;IAEvB,KAAKjB,OAAO,CAACE,aAAa;MACxB,MAAMgB,YAAY,GAAG;QACnBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;QACzB,GAAGP,MAAM,CAACE;MACZ,CAAC;MACD,OAAO;QACL,GAAGH,KAAK;QACRS,UAAU,EAAE,CAAC,GAAGT,KAAK,CAACS,UAAU,EAAEL,YAAY;MAChD,CAAC;IAEH,KAAKlB,OAAO,CAACG,gBAAgB;MAC3B,OAAO;QACL,GAAGW,KAAK;QACRS,UAAU,EAAET,KAAK,CAACS,UAAU,CAACC,GAAG,CAACC,IAAI,IACnCA,IAAI,CAACN,EAAE,KAAKJ,MAAM,CAACE,OAAO,CAACE,EAAE,GAAG;UAAE,GAAGM,IAAI;UAAE,GAAGV,MAAM,CAACE;QAAQ,CAAC,GAAGQ,IACnE;MACF,CAAC;IAEH,KAAKzB,OAAO,CAACI,gBAAgB;MAC3B,OAAO;QACL,GAAGU,KAAK;QACRS,UAAU,EAAET,KAAK,CAACS,UAAU,CAACG,MAAM,CAACD,IAAI,IAAIA,IAAI,CAACN,EAAE,KAAKJ,MAAM,CAACE,OAAO;MACxE,CAAC;IAEH,KAAKjB,OAAO,CAACK,kBAAkB;MAC7B,MAAMsB,SAAS,GAAG;QAChBR,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;QACzB,GAAGP,MAAM,CAACE;MACZ,CAAC;MACD,OAAO;QACL,GAAGH,KAAK;QACRc,aAAa,EAAE,CAAC,GAAGd,KAAK,CAACc,aAAa,EAAED,SAAS;MACnD,CAAC;IAEH,KAAK3B,OAAO,CAACM,qBAAqB;MAChC,OAAO;QACL,GAAGQ,KAAK;QACRc,aAAa,EAAEd,KAAK,CAACc,aAAa,CAACJ,GAAG,CAACK,MAAM,IAC3CA,MAAM,CAACV,EAAE,KAAKJ,MAAM,CAACE,OAAO,CAACE,EAAE,GAAG;UAAE,GAAGU,MAAM;UAAE,GAAGd,MAAM,CAACE;QAAQ,CAAC,GAAGY,MACvE;MACF,CAAC;IAEH,KAAK7B,OAAO,CAACQ,WAAW;MACtB,MAAMsB,UAAU,GAAG;QACjBX,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;QACzB,GAAGP,MAAM,CAACE;MACZ,CAAC;MACD,OAAO;QACL,GAAGH,KAAK;QACRiB,QAAQ,EAAE,CAAC,GAAGjB,KAAK,CAACiB,QAAQ,EAAED,UAAU;MAC1C,CAAC;IAEH,KAAK9B,OAAO,CAACO,cAAc;MACzB,OAAO;QACL,GAAGO,KAAK;QACRiB,QAAQ,EAAEjB,KAAK,CAACiB,QAAQ,CAACP,GAAG,CAACQ,OAAO,IAClCA,OAAO,CAACb,EAAE,KAAKJ,MAAM,CAACE,OAAO,CAACE,EAAE,GAAG;UAAE,GAAGa,OAAO;UAAE,GAAGjB,MAAM,CAACE;QAAQ,CAAC,GAAGe,OACzE;MACF,CAAC;IAEH,KAAKhC,OAAO,CAACU,SAAS;MACpB,MAAMuB,QAAQ,GAAG;QACfd,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;QACzB,GAAGP,MAAM,CAACE;MACZ,CAAC;MACD,OAAO;QACL,GAAGH,KAAK;QACRoB,MAAM,EAAE,CAAC,GAAGpB,KAAK,CAACoB,MAAM,EAAED,QAAQ;MACpC,CAAC;IAEH,KAAKjC,OAAO,CAACS,YAAY;MACvB,OAAO;QACL,GAAGK,KAAK;QACRoB,MAAM,EAAEpB,KAAK,CAACoB,MAAM,CAACV,GAAG,CAACW,KAAK,IAC5BA,KAAK,CAAChB,EAAE,KAAKJ,MAAM,CAACE,OAAO,CAACE,EAAE,GAAG;UAAE,GAAGgB,KAAK;UAAE,GAAGpB,MAAM,CAACE;QAAQ,CAAC,GAAGkB,KACrE;MACF,CAAC;IAEH,KAAKnC,OAAO,CAACY,WAAW;MACtB,MAAMwB,UAAU,GAAG;QACjBjB,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;QACzB,GAAGP,MAAM,CAACE;MACZ,CAAC;MACD,OAAO;QACL,GAAGH,KAAK;QACRuB,QAAQ,EAAE,CAAC,GAAGvB,KAAK,CAACuB,QAAQ,EAAED,UAAU;MAC1C,CAAC;IAEH,KAAKpC,OAAO,CAACW,cAAc;MACzB,OAAO;QACL,GAAGG,KAAK;QACRuB,QAAQ,EAAEvB,KAAK,CAACuB,QAAQ,CAACb,GAAG,CAACc,OAAO,IAClCA,OAAO,CAACnB,EAAE,KAAKJ,MAAM,CAACE,OAAO,CAACE,EAAE,GAAG;UAAE,GAAGmB,OAAO;UAAE,GAAGvB,MAAM,CAACE;QAAQ,CAAC,GAAGqB,OACzE;MACF,CAAC;IAEH;MACE,OAAOxB,KAAK;EAChB;AACF,CAAC;;AAED;AACA,OAAO,MAAMyB,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,QAAQ,CAAC,GAAGlD,UAAU,CAACoB,WAAW,EAAE;IAC/CkB,QAAQ,EAAE,EAAE;IACZG,MAAM,EAAE,EAAE;IACVG,QAAQ,EAAE,EAAE;IACZO,OAAO,EAAE,EAAE;IACXrB,UAAU,EAAE,EAAE;IACdK,aAAa,EAAE;EACjB,CAAC,CAAC;;EAEF;EACAlC,SAAS,CAAC,MAAM;IACd,MAAMmD,UAAU,GAAGlD,QAAQ,CAAC,CAAC;IAC7BgD,QAAQ,CAAC;MAAE3B,IAAI,EAAEhB,OAAO,CAACC,SAAS;MAAEgB,OAAO,EAAE4B;IAAW,CAAC,CAAC;EAC5D,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAnD,SAAS,CAAC,MAAM;IACd,IAAIgD,IAAI,CAACX,QAAQ,CAACe,MAAM,GAAG,CAAC,EAAE;MAAE;MAC9BlD,QAAQ,CAAC8C,IAAI,CAAC;IAChB;EACF,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;;EAEV;EACA,MAAMK,YAAY,GAAIC,SAAS,IAAK;IAClCL,QAAQ,CAAC;MAAE3B,IAAI,EAAEhB,OAAO,CAACE,aAAa;MAAEe,OAAO,EAAE+B;IAAU,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMC,eAAe,GAAID,SAAS,IAAK;IACrCL,QAAQ,CAAC;MAAE3B,IAAI,EAAEhB,OAAO,CAACG,gBAAgB;MAAEc,OAAO,EAAE+B;IAAU,CAAC,CAAC;EAClE,CAAC;EAED,MAAME,eAAe,GAAI/B,EAAE,IAAK;IAC9BwB,QAAQ,CAAC;MAAE3B,IAAI,EAAEhB,OAAO,CAACI,gBAAgB;MAAEa,OAAO,EAAEE;IAAG,CAAC,CAAC;EAC3D,CAAC;EAED,MAAMgC,gBAAgB,GAAItB,MAAM,IAAK;IACnCc,QAAQ,CAAC;MAAE3B,IAAI,EAAEhB,OAAO,CAACK,kBAAkB;MAAEY,OAAO,EAAEY;IAAO,CAAC,CAAC;EACjE,CAAC;EAED,MAAMuB,mBAAmB,GAAIvB,MAAM,IAAK;IACtCc,QAAQ,CAAC;MAAE3B,IAAI,EAAEhB,OAAO,CAACM,qBAAqB;MAAEW,OAAO,EAAEY;IAAO,CAAC,CAAC;EACpE,CAAC;EAED,MAAMwB,UAAU,GAAIrB,OAAO,IAAK;IAC9BW,QAAQ,CAAC;MAAE3B,IAAI,EAAEhB,OAAO,CAACQ,WAAW;MAAES,OAAO,EAAEe;IAAQ,CAAC,CAAC;EAC3D,CAAC;EAED,MAAMsB,aAAa,GAAItB,OAAO,IAAK;IACjCW,QAAQ,CAAC;MAAE3B,IAAI,EAAEhB,OAAO,CAACO,cAAc;MAAEU,OAAO,EAAEe;IAAQ,CAAC,CAAC;EAC9D,CAAC;EAED,MAAMuB,QAAQ,GAAIpB,KAAK,IAAK;IAC1BQ,QAAQ,CAAC;MAAE3B,IAAI,EAAEhB,OAAO,CAACU,SAAS;MAAEO,OAAO,EAAEkB;IAAM,CAAC,CAAC;EACvD,CAAC;EAED,MAAMqB,WAAW,GAAIrB,KAAK,IAAK;IAC7BQ,QAAQ,CAAC;MAAE3B,IAAI,EAAEhB,OAAO,CAACS,YAAY;MAAEQ,OAAO,EAAEkB;IAAM,CAAC,CAAC;EAC1D,CAAC;EAED,MAAMsB,UAAU,GAAInB,OAAO,IAAK;IAC9BK,QAAQ,CAAC;MAAE3B,IAAI,EAAEhB,OAAO,CAACY,WAAW;MAAEK,OAAO,EAAEqB;IAAQ,CAAC,CAAC;EAC3D,CAAC;EAED,MAAMoB,aAAa,GAAIpB,OAAO,IAAK;IACjCK,QAAQ,CAAC;MAAE3B,IAAI,EAAEhB,OAAO,CAACW,cAAc;MAAEM,OAAO,EAAEqB;IAAQ,CAAC,CAAC;EAC9D,CAAC;EAED,MAAMqB,KAAK,GAAG;IACZjB,IAAI;IACJK,YAAY;IACZE,eAAe;IACfC,eAAe;IACfC,gBAAgB;IAChBC,mBAAmB;IACnBC,UAAU;IACVC,aAAa;IACbC,QAAQ;IACRC,WAAW;IACXC,UAAU;IACVC;EACF,CAAC;EAED,oBACE5D,OAAA,CAACC,WAAW,CAAC6D,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAnB,QAAA,EAChCA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAAvB,EAAA,CA1FaF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AA2FzB,OAAO,MAAM2B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAG5E,UAAU,CAACO,WAAW,CAAC;EACvC,IAAI,CAACqE,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,kDAAkD,CAAC;EACrE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}