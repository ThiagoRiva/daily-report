{"ast":null,"code":"import { format } from 'date-fns';\n\n// Gerar relat√≥rio di√°rio de atividades\nexport const generateDailyReportWhatsApp = ({\n  cluster,\n  data,\n  tecnico,\n  usina,\n  atividades,\n  alarmesCriticos,\n  observacoesGerais\n}) => {\n  const dataFormatada = format(new Date(data), 'dd/MM/yyyy');\n\n  // Gerar linhas de atividades numeradas\n  const linhasAtividades = atividades.map((atividade, index) => {\n    const inicio = atividade.inicio || '--:--';\n    const fim = atividade.fim || '--:--';\n    return `${index + 1}) ${atividade.tarefa} ‚Äì ‚è∞ ${inicio}/${fim}`;\n  }).join('\\n');\n\n  // Gerar observa√ß√µes\n  const observacoes = observacoesGerais.trim() || '-';\n\n  // Gerar status de alarmes\n  const statusAlarmes = alarmesCriticos.tem ? `SIM${alarmesCriticos.descricao ? ` ‚Äì ${alarmesCriticos.descricao}` : ''}` : 'N√ÉO';\n  return `üîÜ *Relat√≥rio Di√°rio ${cluster} ‚Äì ${dataFormatada}*\nüë∑ Equipe: ${tecnico}\nüìç Usina: ${usina}\n\nüîß *Atividades Programadas*\n${linhasAtividades}\n\nüìå *Observa√ß√µes*\n${observacoes}\n\nüìä *Status Sistemas*\n- Alarmes cr√≠ticos: ${statusAlarmes}`;\n};\n\n// Gerar status t√©cnico por usina\nexport const generateTechnicalStatusWhatsApp = ({\n  usina,\n  data,\n  cluster,\n  tecnico,\n  inversores,\n  strings,\n  trackers,\n  observacoesGerais\n}) => {\n  const dataFormatada = format(new Date(data), 'dd/MM/yyyy');\n\n  // Fun√ß√£o auxiliar para gerar status de subsistema\n  const gerarStatusSubsistema = (subsistema, nome) => {\n    const status = subsistema.ok100 ? 'SIM' : 'N√ÉO';\n    let detalhes = '';\n    if (!subsistema.ok100 && (subsistema.motivo || subsistema.acaoPrevista)) {\n      const partes = [];\n      if (subsistema.motivo) partes.push(`Motivo: ${subsistema.motivo}`);\n      if (subsistema.acaoPrevista) partes.push(`A√ß√£o: ${subsistema.acaoPrevista}`);\n      detalhes = `\\n${partes.join('. ')}`;\n    }\n    return `üîß *${nome}*: ${status}${detalhes}`;\n  };\n  const observacoes = observacoesGerais.trim() || '-';\n  return `üìç *${usina}* ‚Äì ${dataFormatada} ‚Äì ${cluster}\nüë∑ T√©cnico: ${tecnico}\n\n${gerarStatusSubsistema(inversores, 'Inversores')}\n\n${gerarStatusSubsistema(strings, 'Strings')}\n\n${gerarStatusSubsistema(trackers, 'Trackers')}\n\nüìù Observa√ß√µes: ${observacoes}`;\n};\n\n// Gerar status t√©cnico consolidado por cluster\nexport const generateConsolidatedTechnicalStatusWhatsApp = (statusTecnicoArray, cluster, data) => {\n  const dataFormatada = format(new Date(data), 'dd/MM/yyyy');\n  const blocosPorUsina = statusTecnicoArray.map(status => generateTechnicalStatusWhatsApp(status)).join('\\n\\n');\n  return `üóÇÔ∏è *Status T√©cnico ‚Äì ${cluster} ‚Äì ${dataFormatada}*\n\n${blocosPorUsina}`;\n};\n\n// Fun√ß√£o auxiliar para formatar data\nexport const formatDateForWhatsApp = date => {\n  return format(new Date(date), 'dd/MM/yyyy');\n};\n\n// Fun√ß√£o auxiliar para validar dados antes de gerar mensagem\nexport const validateDataForWhatsApp = (data, type) => {\n  const errors = [];\n  if (!data.cluster) errors.push('Cluster √© obrigat√≥rio');\n  if (!data.data) errors.push('Data √© obrigat√≥ria');\n  if (!data.usina) errors.push('Usina √© obrigat√≥ria');\n  if (!data.tecnico) errors.push('T√©cnico √© obrigat√≥rio');\n  if (type === 'daily' && (!data.atividades || data.atividades.length === 0)) {\n    errors.push('Pelo menos uma atividade √© obrigat√≥ria');\n  }\n  if (type === 'technical' && (!data.inversores || !data.strings || !data.trackers)) {\n    errors.push('Status de todos os subsistemas √© obrigat√≥rio');\n  }\n  return errors;\n};","map":{"version":3,"names":["format","generateDailyReportWhatsApp","cluster","data","tecnico","usina","atividades","alarmesCriticos","observacoesGerais","dataFormatada","Date","linhasAtividades","map","atividade","index","inicio","fim","tarefa","join","observacoes","trim","statusAlarmes","tem","descricao","generateTechnicalStatusWhatsApp","inversores","strings","trackers","gerarStatusSubsistema","subsistema","nome","status","ok100","detalhes","motivo","acaoPrevista","partes","push","generateConsolidatedTechnicalStatusWhatsApp","statusTecnicoArray","blocosPorUsina","formatDateForWhatsApp","date","validateDataForWhatsApp","type","errors","length"],"sources":["/home/thiagoriva/Documents/Projects/daily-report/src/utils/whatsappGenerator.js"],"sourcesContent":["import { format } from 'date-fns';\n\n// Gerar relat√≥rio di√°rio de atividades\nexport const generateDailyReportWhatsApp = ({ \n  cluster, \n  data, \n  tecnico, \n  usina, \n  atividades, \n  alarmesCriticos, \n  observacoesGerais \n}) => {\n  const dataFormatada = format(new Date(data), 'dd/MM/yyyy');\n  \n  // Gerar linhas de atividades numeradas\n  const linhasAtividades = atividades\n    .map((atividade, index) => {\n      const inicio = atividade.inicio || '--:--';\n      const fim = atividade.fim || '--:--';\n      return `${index + 1}) ${atividade.tarefa} ‚Äì ‚è∞ ${inicio}/${fim}`;\n    })\n    .join('\\n');\n\n  // Gerar observa√ß√µes\n  const observacoes = observacoesGerais.trim() || '-';\n\n  // Gerar status de alarmes\n  const statusAlarmes = alarmesCriticos.tem \n    ? `SIM${alarmesCriticos.descricao ? ` ‚Äì ${alarmesCriticos.descricao}` : ''}`\n    : 'N√ÉO';\n\n  return `üîÜ *Relat√≥rio Di√°rio ${cluster} ‚Äì ${dataFormatada}*\nüë∑ Equipe: ${tecnico}\nüìç Usina: ${usina}\n\nüîß *Atividades Programadas*\n${linhasAtividades}\n\nüìå *Observa√ß√µes*\n${observacoes}\n\nüìä *Status Sistemas*\n- Alarmes cr√≠ticos: ${statusAlarmes}`;\n};\n\n// Gerar status t√©cnico por usina\nexport const generateTechnicalStatusWhatsApp = ({ \n  usina, \n  data, \n  cluster, \n  tecnico, \n  inversores, \n  strings, \n  trackers, \n  observacoesGerais \n}) => {\n  const dataFormatada = format(new Date(data), 'dd/MM/yyyy');\n  \n  // Fun√ß√£o auxiliar para gerar status de subsistema\n  const gerarStatusSubsistema = (subsistema, nome) => {\n    const status = subsistema.ok100 ? 'SIM' : 'N√ÉO';\n    let detalhes = '';\n    \n    if (!subsistema.ok100 && (subsistema.motivo || subsistema.acaoPrevista)) {\n      const partes = [];\n      if (subsistema.motivo) partes.push(`Motivo: ${subsistema.motivo}`);\n      if (subsistema.acaoPrevista) partes.push(`A√ß√£o: ${subsistema.acaoPrevista}`);\n      detalhes = `\\n${partes.join('. ')}`;\n    }\n    \n    return `üîß *${nome}*: ${status}${detalhes}`;\n  };\n\n  const observacoes = observacoesGerais.trim() || '-';\n\n  return `üìç *${usina}* ‚Äì ${dataFormatada} ‚Äì ${cluster}\nüë∑ T√©cnico: ${tecnico}\n\n${gerarStatusSubsistema(inversores, 'Inversores')}\n\n${gerarStatusSubsistema(strings, 'Strings')}\n\n${gerarStatusSubsistema(trackers, 'Trackers')}\n\nüìù Observa√ß√µes: ${observacoes}`;\n};\n\n// Gerar status t√©cnico consolidado por cluster\nexport const generateConsolidatedTechnicalStatusWhatsApp = (statusTecnicoArray, cluster, data) => {\n  const dataFormatada = format(new Date(data), 'dd/MM/yyyy');\n  \n  const blocosPorUsina = statusTecnicoArray\n    .map(status => generateTechnicalStatusWhatsApp(status))\n    .join('\\n\\n');\n\n  return `üóÇÔ∏è *Status T√©cnico ‚Äì ${cluster} ‚Äì ${dataFormatada}*\n\n${blocosPorUsina}`;\n};\n\n// Fun√ß√£o auxiliar para formatar data\nexport const formatDateForWhatsApp = (date) => {\n  return format(new Date(date), 'dd/MM/yyyy');\n};\n\n// Fun√ß√£o auxiliar para validar dados antes de gerar mensagem\nexport const validateDataForWhatsApp = (data, type) => {\n  const errors = [];\n  \n  if (!data.cluster) errors.push('Cluster √© obrigat√≥rio');\n  if (!data.data) errors.push('Data √© obrigat√≥ria');\n  if (!data.usina) errors.push('Usina √© obrigat√≥ria');\n  if (!data.tecnico) errors.push('T√©cnico √© obrigat√≥rio');\n  \n  if (type === 'daily' && (!data.atividades || data.atividades.length === 0)) {\n    errors.push('Pelo menos uma atividade √© obrigat√≥ria');\n  }\n  \n  if (type === 'technical' && (!data.inversores || !data.strings || !data.trackers)) {\n    errors.push('Status de todos os subsistemas √© obrigat√≥rio');\n  }\n  \n  return errors;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}