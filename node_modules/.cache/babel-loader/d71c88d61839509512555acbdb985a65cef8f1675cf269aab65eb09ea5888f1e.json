{"ast":null,"code":"var _jsxFileName = \"/home/thiagoriva/Documents/Projects/daily-report/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Tipos de ações\nconst ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_ERROR: 'LOGIN_ERROR',\n  LOGOUT: 'LOGOUT',\n  VERIFY_TOKEN: 'VERIFY_TOKEN'\n};\n\n// Estado inicial\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  loading: true,\n  error: null\n};\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.LOGIN_START:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case ACTIONS.LOGIN_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false,\n        error: null\n      };\n    case ACTIONS.LOGIN_ERROR:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: action.payload\n      };\n    case ACTIONS.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: null\n      };\n    case ACTIONS.VERIFY_TOKEN:\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\n\n// Provider\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Verificar token ao carregar a aplicação\n  useEffect(() => {\n    const verifyToken = async () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        dispatch({\n          type: ACTIONS.LOGOUT\n        });\n        return;\n      }\n      try {\n        const response = await fetch('http://localhost:3001/api/auth/verify', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          dispatch({\n            type: ACTIONS.VERIFY_TOKEN,\n            payload: data.user\n          });\n        } else {\n          localStorage.removeItem('token');\n          dispatch({\n            type: ACTIONS.LOGOUT\n          });\n        }\n      } catch (error) {\n        console.error('Erro ao verificar token:', error);\n        localStorage.removeItem('token');\n        dispatch({\n          type: ACTIONS.LOGOUT\n        });\n      }\n    };\n    verifyToken();\n  }, []);\n\n  // Função de login\n  const login = async (email, senha) => {\n    dispatch({\n      type: ACTIONS.LOGIN_START\n    });\n    try {\n      const response = await fetch('http://localhost:3001/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          senha\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        localStorage.setItem('token', data.token);\n        dispatch({\n          type: ACTIONS.LOGIN_SUCCESS,\n          payload: {\n            user: data.user,\n            token: data.token\n          }\n        });\n        return {\n          success: true\n        };\n      } else {\n        dispatch({\n          type: ACTIONS.LOGIN_ERROR,\n          payload: data.error\n        });\n        return {\n          success: false,\n          error: data.error\n        };\n      }\n    } catch (error) {\n      const errorMessage = 'Erro de conexão. Verifique sua internet.';\n      dispatch({\n        type: ACTIONS.LOGIN_ERROR,\n        payload: errorMessage\n      });\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Função de logout\n  const logout = () => {\n    localStorage.removeItem('token');\n    dispatch({\n      type: ACTIONS.LOGOUT\n    });\n  };\n  const value = {\n    ...state,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook para usar o contexto\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jsxDEV","_jsxDEV","AuthContext","ACTIONS","LOGIN_START","LOGIN_SUCCESS","LOGIN_ERROR","LOGOUT","VERIFY_TOKEN","initialState","user","token","localStorage","getItem","isAuthenticated","loading","error","authReducer","state","action","type","payload","AuthProvider","children","_s","dispatch","verifyToken","response","fetch","headers","ok","data","json","removeItem","console","login","email","senha","method","body","JSON","stringify","setItem","success","errorMessage","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/home/thiagoriva/Documents/Projects/daily-report/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\n// Tipos de ações\nconst ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_ERROR: 'LOGIN_ERROR',\n  LOGOUT: 'LOGOUT',\n  VERIFY_TOKEN: 'VERIFY_TOKEN'\n};\n\n// Estado inicial\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  loading: true,\n  error: null\n};\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.LOGIN_START:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n\n    case ACTIONS.LOGIN_SUCCESS:\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false,\n        error: null\n      };\n\n    case ACTIONS.LOGIN_ERROR:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: action.payload\n      };\n\n    case ACTIONS.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        error: null\n      };\n\n    case ACTIONS.VERIFY_TOKEN:\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\n// Provider\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Verificar token ao carregar a aplicação\n  useEffect(() => {\n    const verifyToken = async () => {\n      const token = localStorage.getItem('token');\n      \n      if (!token) {\n        dispatch({ type: ACTIONS.LOGOUT });\n        return;\n      }\n\n      try {\n        const response = await fetch('http://localhost:3001/api/auth/verify', {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          dispatch({ type: ACTIONS.VERIFY_TOKEN, payload: data.user });\n        } else {\n          localStorage.removeItem('token');\n          dispatch({ type: ACTIONS.LOGOUT });\n        }\n      } catch (error) {\n        console.error('Erro ao verificar token:', error);\n        localStorage.removeItem('token');\n        dispatch({ type: ACTIONS.LOGOUT });\n      }\n    };\n\n    verifyToken();\n  }, []);\n\n  // Função de login\n  const login = async (email, senha) => {\n    dispatch({ type: ACTIONS.LOGIN_START });\n\n    try {\n      const response = await fetch('http://localhost:3001/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email, senha })\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        localStorage.setItem('token', data.token);\n        dispatch({ \n          type: ACTIONS.LOGIN_SUCCESS, \n          payload: { user: data.user, token: data.token } \n        });\n        return { success: true };\n      } else {\n        dispatch({ type: ACTIONS.LOGIN_ERROR, payload: data.error });\n        return { success: false, error: data.error };\n      }\n    } catch (error) {\n      const errorMessage = 'Erro de conexão. Verifique sua internet.';\n      dispatch({ type: ACTIONS.LOGIN_ERROR, payload: errorMessage });\n      return { success: false, error: errorMessage };\n    }\n  };\n\n  // Função de logout\n  const logout = () => {\n    localStorage.removeItem('token');\n    dispatch({ type: ACTIONS.LOGOUT });\n  };\n\n  const value = {\n    ...state,\n    login,\n    logout\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Hook para usar o contexto\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth deve ser usado dentro de um AuthProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}