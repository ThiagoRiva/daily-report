{"ast":null,"code":"var _jsxFileName = \"/home/thiagoriva/Documents/Projects/daily-report/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { DataProvider } from './context/DataContext';\nimport HomeScreen from './components/HomeScreen';\nimport DailyReportScreen from './components/DailyReportScreen';\nimport TechnicalStatusScreen from './components/TechnicalStatusScreen';\nimport QuickModeScreen from './components/QuickModeScreen';\nimport ManagementScreen from './components/ManagementScreen';\nimport MasterDataScreen from './components/MasterDataScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentScreen, setCurrentScreen] = useState('home');\n  const [screenOptions, setScreenOptions] = useState({});\n  const navigateToScreen = (screen, options = {}) => {\n    setCurrentScreen(screen);\n    setScreenOptions(options);\n  };\n  const navigateBack = () => {\n    setCurrentScreen('home');\n    setScreenOptions({});\n  };\n  const renderCurrentScreen = () => {\n    switch (currentScreen) {\n      case 'home':\n        return /*#__PURE__*/_jsxDEV(HomeScreen, {\n          onNavigate: navigateToScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 16\n        }, this);\n      case 'daily-report':\n        return screenOptions.quickMode ? /*#__PURE__*/_jsxDEV(QuickModeScreen, {\n          onBack: navigateBack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(DailyReportScreen, {\n          onBack: navigateBack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this);\n      case 'technical-status':\n        return screenOptions.quickMode ? /*#__PURE__*/_jsxDEV(QuickModeScreen, {\n          onBack: navigateBack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(TechnicalStatusScreen, {\n          onBack: navigateBack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this);\n      case 'management':\n        return /*#__PURE__*/_jsxDEV(ManagementScreen, {\n          onBack: navigateBack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 16\n        }, this);\n      case 'master-data':\n        return /*#__PURE__*/_jsxDEV(MasterDataScreen, {\n          onBack: navigateBack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(HomeScreen, {\n          onNavigate: navigateToScreen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DataProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: renderCurrentScreen()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TcrMRzDNStrjLgT0fMJXn1VmD40=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","DataProvider","HomeScreen","DailyReportScreen","TechnicalStatusScreen","QuickModeScreen","ManagementScreen","MasterDataScreen","jsxDEV","_jsxDEV","App","_s","currentScreen","setCurrentScreen","screenOptions","setScreenOptions","navigateToScreen","screen","options","navigateBack","renderCurrentScreen","onNavigate","fileName","_jsxFileName","lineNumber","columnNumber","quickMode","onBack","children","className","_c","$RefreshReg$"],"sources":["/home/thiagoriva/Documents/Projects/daily-report/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { DataProvider } from './context/DataContext';\nimport HomeScreen from './components/HomeScreen';\nimport DailyReportScreen from './components/DailyReportScreen';\nimport TechnicalStatusScreen from './components/TechnicalStatusScreen';\nimport QuickModeScreen from './components/QuickModeScreen';\nimport ManagementScreen from './components/ManagementScreen';\nimport MasterDataScreen from './components/MasterDataScreen';\n\nfunction App() {\n  const [currentScreen, setCurrentScreen] = useState('home');\n  const [screenOptions, setScreenOptions] = useState({});\n\n  const navigateToScreen = (screen, options = {}) => {\n    setCurrentScreen(screen);\n    setScreenOptions(options);\n  };\n\n  const navigateBack = () => {\n    setCurrentScreen('home');\n    setScreenOptions({});\n  };\n\n  const renderCurrentScreen = () => {\n    switch (currentScreen) {\n      case 'home':\n        return <HomeScreen onNavigate={navigateToScreen} />;\n      \n      case 'daily-report':\n        return screenOptions.quickMode ? (\n          <QuickModeScreen onBack={navigateBack} />\n        ) : (\n          <DailyReportScreen onBack={navigateBack} />\n        );\n      \n      case 'technical-status':\n        return screenOptions.quickMode ? (\n          <QuickModeScreen onBack={navigateBack} />\n        ) : (\n          <TechnicalStatusScreen onBack={navigateBack} />\n        );\n      \n      case 'management':\n        return <ManagementScreen onBack={navigateBack} />;\n      \n      case 'master-data':\n        return <MasterDataScreen onBack={navigateBack} />;\n      \n      default:\n        return <HomeScreen onNavigate={navigateToScreen} />;\n    }\n  };\n\n  return (\n    <DataProvider>\n      <div className=\"App\">\n        {renderCurrentScreen()}\n      </div>\n    </DataProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}